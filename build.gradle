group 'home.task'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.aggregator'

sourceCompatibility = 1.8

buildscript {
    ext {

        serenity_version = "1.8.12"
        kotlin_version = '1.2.10'
        jackson_version = '2.9.2'

        threads = project.hasProperty('threads') ? project.getProperty('threads').toInteger() : 1
        siteUrl = project.hasProperty('siteUrl') ? project.getProperty('siteUrl').toString() : "http://petstore.swagger.io"
        apiVersion = project.hasProperty('apiVersion') ? project.getProperty('apiVersion').toString() : "v2"

        exclude = project.hasProperty('exclude') ? project.getProperty('exclude').toString() : ''
        include = project.hasProperty('include') ? project.getProperty('include').toString() : ''
    }

    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:$serenity_version")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'net.serenity-bdd', name: 'serenity-core', version:serenity_version
    compile group: 'net.serenity-bdd', name: 'serenity-junit', version:serenity_version
    compile group: 'net.serenity-bdd', name: 'serenity-rest-assured', version:serenity_version
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version:jackson_version
    compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version:jackson_version
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version:jackson_version
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile group: 'org.slf4j', name: 'slf4j-simple', version:'1.7.25'
}

test {
    useJUnit() {

        if (exclude?.trim()) {
            excludeCategories exclude
        }

        if (include?.trim()) {
            includeCategories include
        }
    }
    jvmArgs '-Dfile.encoding=UTF-8 -Xms128m -Xmx512m'
    maxParallelForks = threads
    scanForTestClasses true
    testLogging {
        showStandardStreams = true
        exceptionFormat "full"
        events "started", "passed", "skipped", "failed", "standardOut", "standardError"
        displayGranularity = 0
    }

    filter {
        includeTestsMatching "*_Test"
    }

    // properties
    systemProperties System.properties as Map<String, ?>
    systemProperty "siteUrl", siteUrl
    systemProperty "apiVersion", apiVersion
}

project.buildDir = 'target/'

clean {
    delete 'target'
}

gradle.startParameter.continueOnFailure = true

task wrapper(type: Wrapper) {
    gradleVersion = '4.3.1'
}
